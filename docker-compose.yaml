x-airflow-common:
  &airflow-common-env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
  AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:latest
    command: ["airflow", "db", "init"]
    environment:
      <<: *airflow-common-env
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:latest
    environment:
      <<: *airflow-common-env
    ports:
      - "8080:8080"
    command: ["airflow", "webserver"]
    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./tests:/opt/airflow/tests
    env_file:
      - .env

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:latest
    command: ["airflow", "scheduler"]
    environment:
      <<: *airflow-common-env
    depends_on:
      - airflow-webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./tests:/opt/airflow/tests
    env_file:
      - .env
      
  superset:
    build:
      context: .
      dockerfile: superset.Dockerfile
    image: custom-superset:latest
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_DATABASE_URI: postgresql+psycopg2://airflow:airflow@postgres/airflow
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - superset_home:/app/superset_home
    command: >
      /bin/bash -c "
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin || true &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088
      "
    env_file:
      - .env

volumes:
  postgres_data:
  logs:
  superset_home: